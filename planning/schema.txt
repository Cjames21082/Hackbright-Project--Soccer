Tables
===================================================================
===================================================================
Global:
USER_PLAYER
USER_TEAMLEADER
USER_ADMIN

#User (DONE)
	id - primary_key
	first_name - required
	last_name - required
	email - required
	password - required
	address
	city
	state
	zipcode
	country
	role_id (admin, team_leader, player)
	date_of_birth - required (can calculate age)
	gender
	fitness- optional
	experience (yrs playing)
	willing_to_be_team_leader

#Positions (DONE)
	id - primary_key
	user_id - foreign_key
	position_type (offense, midfield, defense, goalie)

#Player Stats
	id - primary_key
	user_id
	game_id
	goals
	assists
	offense_dribbling
	offside call
	defensive stops
	foul_cards
	goals_saved
	user_age
	user_fitness
	main_position
Note: capture experience, age, health, fitness on stat table

Player_Health_per_game
	id- pk
	player_stat_id
	game_id
	health_issue_id
Note: copy each game stats for player_health_issue table
	
#Player_Health_Issue (DONE)
	id- primary_key 
	user_id -foreign_key
	health_id - foreign_key

#Health_Issue (DONE)
	id- primary_key
	issue- (none-1 asthma-10, weak ankles-2, knee surgery-3, 
			achilles surgery-4, other surgery-5,
	        frequent muscle sprains-6, back related medical conditions-7, 
	        diabetes-8, other-9)

#Team (DONE)
	id - primary_key
	season_cycle_id
	team_leader_id - fk to user_table (user_id)
	team_name
	wins
	losses
	ties
	team_goals

#TeamMembers- Connection between Player_Table and Team_Table (DONE)
	id- primary_key
	team_id
	user_id
	
#Game
	id- pk
	game_date
	home_team_id
	away_team_id
	home_score
	away_score

Note :Admin Tool
#Season_Cycle (Done)
	id - primary_key
	admin_userid
	league_name
	cycle_name
	num_of_teams
	home_region
	season_fee_resident
	season_fee_nonresident
	registration_start_date
	registration_end_date

Notes: timestamp - create/ update on each table
       soft delete - deleted (Boolean)

===============================================
Elo Algorithm
===============================================
import math;
class elo_core:
  def getExpectation(rating_1, rating_2):
    calc = (1.0 / (1.0 + pow(10, ((rating_2 - rating_1) / 400))));
    return calc;
  def modifyRating(rating, expected, actual, kfactor):
    calc = (rating + kfactor * (actual - expected));
    return calc;

================================================
Deleted Tables
=================================================


Note: This table disappears
#Player
	id- primary_key
	user_id
	player_stats_id
	player_position_id	

Note: set as global variables instead of a table
#Role 
	id- primary_key
	role_name (admin, team_leader, player)


Note: This table disappears on User table
#Fitness
	id- primary_key
	level (low, medium, high)

#TeamStats
	id
	team_id
	team_goals